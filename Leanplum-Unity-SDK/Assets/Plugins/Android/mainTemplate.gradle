// GENERATED BY UNITY. REMOVE THIS COMMENT TO PREVENT OVERWRITING WHEN EXPORTING AGAIN

buildscript {
    repositories {
        google()
        mavenCentral()
    }

    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        // Uncomment for FCM
        // classpath 'com.google.gms:google-services:4.3.3'
        // Uncomment for Huawei
        // classpath 'com.huawei.agconnect:agcp:1.6.5.300'
**BUILD_SCRIPT_DEPS**}
}

allprojects {
    repositories {
        google()
        mavenCentral()
        // Uncomment for Huawei
        // maven {
        //     url 'https://developer.huawei.com/repo/'
        // }
        flatDir {
            dirs 'libs'
        }
    }
}

def LEANPLUM_SDK_VERSION = "%LP_VERSION%"
def CT_SDK_VERSION = "%CT_VERSION%"

apply plugin: 'com.android.library'
// Uncomment for FCM if not using GooglePlugin or googleservices.xml
// apply plugin: 'com.google.gms.google-services'
// Uncomment for Huawei
// apply plugin: 'com.huawei.agconnect'
**APPLY_PLUGINS**

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    implementation "com.leanplum:leanplum-core:${LEANPLUM_SDK_VERSION}"
    implementation "com.clevertap.android:clevertap-android-sdk:${CT_SDK_VERSION}"
    // implementation "com.leanplum:leanplum-push:${LEANPLUM_SDK_VERSION}"
    // implementation "com.leanplum:leanplum-location:${LEANPLUM_SDK_VERSION}"

    // Uncomment for FCM
    // implementation "com.leanplum:leanplum-fcm:${LEANPLUM_SDK_VERSION}"
    // implementation 'com.google.firebase:firebase-messaging:22.0.0'

    // Uncomment for Huawei
    // implementation "com.leanplum:leanplum-hms:${LEANPLUM_SDK_VERSION}"

    // Uncomment for MiPush. Note that leanplum-mipush package is deprecated. MiPush will be used through CleverTap SDK.
    // implementation "com.leanplum:leanplum-mipush:${LEANPLUM_SDK_VERSION}"

    implementation 'com.google.code.gson:gson:2.8.5'

    // implementation(name: "com.leanplum.unity-wrapper-${LEANPLUM_SDK_VERSION}", ext:'aar')
    //implementation project(':android-unity-wrapper')
**DEPS**}

android {
    compileSdkVersion **APIVERSION**
    buildToolsVersion '**BUILDTOOLS**'

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
consumerProguardFiles 'proguard-unity.txt'**USER_PROGUARD**
        minSdkVersion **MINSDKVERSION**
        targetSdkVersion **TARGETSDKVERSION**
        
        ndk {
            abiFilters **ABIFILTERS**
        }
        versionCode **VERSIONCODE**
        versionName '**VERSIONNAME**'
    }

    lintOptions {
        abortOnError false
    }

    aaptOptions {
        noCompress = ['.unity3d', '.ress', '.resource', '.obb'] + unityStreamingAssets.tokenize(', ')
        }**SIGN**

    buildTypes {
        debug {
            minifyEnabled **MINIFY_DEBUG**
            
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD**
            jniDebuggable true
        }
        release {
            minifyEnabled **MINIFY_RELEASE**
            
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-unity.txt'**USER_PROGUARD****SIGNCONFIG**
        }
    }**PACKAGING_OPTIONS**
**BUILT_APK_LOCATION**
    
}**REPOSITORIES****IL_CPP_BUILD_SETUP****SOURCE_BUILD_SETUP**
